{"ast":null,"code":"import axios from \"axios\";\nimport { format } from \"date-fns\";\nexport default {\n  props: {\n    isOpen: Boolean,\n    rowData: {\n      type: Object,\n      default: () => ({})\n    },\n    isEditMode: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data() {\n    return {\n      formData: {\n        ...this.rowData\n      }\n    };\n  },\n  watch: {\n    rowData: {\n      handler(newVal) {\n        this.formData = {\n          ...newVal\n        };\n      },\n      immediate: true\n    }\n  },\n  created() {\n    if (this.isEditMode) {\n      const date = new Date(this.rowData.date);\n      this.formData.date = format(date, \"yyyy-MM-dd\");\n    } else {\n      this.formData.date = new Date().toISOString().split(\"T\")[0];\n    }\n  },\n  methods: {\n    async saveChanges() {\n      try {\n        const username = localStorage.getItem(\"user\");\n        if (!username) {\n          return;\n        }\n        this.formData.username = JSON.parse(username).userName;\n        if (this.isEditMode) {\n          const response = await axios.put(`${import.meta.env.API_URL}/user/updateTable/${this.rowData.id}`, this.formData);\n          if (response.data.message === \"success\") {\n            window.alert(\"Successfully updated row\");\n            this.$emit(\"close\");\n          } else {\n            window.alert(\"Failed to update row\");\n          }\n        } else {\n          const response = await axios.post(`${import.meta.env.API_URL}/user/insertTable`, this.formData);\n          if (response.data.message === \"success\") {\n            window.alert(\"Successfully added new row\");\n            this.formData = {};\n            this.$emit(\"close\");\n          } else {\n            window.alert(\"Failed to add new row\");\n          }\n        }\n      } catch (error) {\n        window.alert(\"Error saving changes:\", error.message);\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return format(date, \"yyyy-MM-dd\");\n    }\n  }\n};","map":{"version":3,"names":["axios","format","props","isOpen","Boolean","rowData","type","Object","default","isEditMode","data","formData","watch","handler","newVal","immediate","created","date","Date","toISOString","split","methods","saveChanges","username","localStorage","getItem","JSON","parse","userName","response","put","import","meta","env","API_URL","id","message","window","alert","$emit","post","error","close","formatDate","dateString"],"sources":["C:\\Users\\dulguun.sa\\Downloads\\TASKS\\TANA_PROJECTS\\frontend\\src\\components\\EditModal.vue"],"sourcesContent":["<template>\n  <transition name=\"modal-fade\">\n    <div class=\"modal-backdrop\">\n      <div\n        class=\"modal\"\n        v-if=\"isOpen\"\n        role=\"dialog\"\n        aria-labelledby=\"modalTitle\"\n        aria-describedby=\"modalDescription\"\n      >\n        <div class=\"modal-content\">\n          <div class=\"input-grid\">\n            <input v-model=\"formData.date\" type=\"date\" />\n            <input\n              v-model=\"formData.owner\"\n              type=\"text\"\n              placeholder=\"Эзэмшигч\"\n            />\n            <input\n              v-model=\"formData.department\"\n              type=\"text\"\n              placeholder=\"Хэлтэс / Нэгж\"\n            />\n            <input\n              v-model=\"formData.complain\"\n              type=\"text\"\n              placeholder=\"Complaints\"\n            />\n            <input\n              v-model=\"formData.barcode\"\n              type=\"text\"\n              placeholder=\"Barcode\"\n            />\n            <div class=\"radio-button\">\n              <label>\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.type\"\n                  value=\"PC\"\n                />PC</label\n              >\n              <label>\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.type\"\n                  value=\"Laptop\"\n                />Laptop</label\n              >\n            </div>\n            <input v-model=\"formData.model\" type=\"text\" placeholder=\"Model\" />\n            <input\n              v-model=\"formData.serviceTag\"\n              type=\"text\"\n              placeholder=\"Service Tag\"\n            />\n            <input\n              v-model=\"formData.storage\"\n              type=\"text\"\n              placeholder=\"Storage\"\n            />\n            <div class=\"radio-button\">\n              <label>\n                <input type=\"radio\" v-model=\"formData.ram\" value=\"4GB\" />4GB\n                RAM</label\n              >\n              <label>\n                <input type=\"radio\" v-model=\"formData.ram\" value=\"8GB\" />8GB\n                RAM</label\n              >\n              <label>\n                <input type=\"radio\" v-model=\"formData.ram\" value=\"16GB\" />16GB\n                RAM</label\n              >\n            </div>\n            <div class=\"radio-button\">\n              <label>\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.cpu\"\n                  value=\"Intel\"\n                />Intel</label\n              >\n              <label>\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.cpu\"\n                  value=\"AMD\"\n                />AMD</label\n              >\n            </div>\n            <input v-model=\"formData.mac\" type=\"text\" placeholder=\"MAC\" />\n            <input v-model=\"formData.os\" type=\"text\" placeholder=\"OS\" />\n            <input\n              v-model=\"formData.pcName\"\n              type=\"text\"\n              placeholder=\"PC Name\"\n            />\n            <input\n              v-model=\"formData.powerSupply\"\n              type=\"text\"\n              placeholder=\"Power Supply\"\n            />\n            <input v-model=\"formData.user\" type=\"text\" placeholder=\"User\" />\n            <input\n              v-model=\"formData.operation\"\n              type=\"text\"\n              placeholder=\"Operation / Онош\"\n            />\n            <input\n              v-model=\"formData.description\"\n              type=\"text\"\n              placeholder=\"Тайлбар\"\n            />\n            <div class=\"radio-button\">\n              <label>\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.demand\"\n                  value=\"Актлах\"\n                />Актлах</label\n              >\n              <label>\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.demand\"\n                  value=\"Сэлбэг\"\n                />Сэлбэг</label\n              >\n              <label>\n                <input\n                  type=\"radio\"\n                  v-model=\"formData.demand\"\n                  value=\"Устгах\"\n                />Устгах</label\n              >\n            </div>\n          </div>\n          <button class=\"button\" @click=\"saveChanges\">\n            {{ isEditMode ? \"Save\" : \"Add\" }}\n          </button>\n          <button class=\"button-close\" @click=\"close\">x</button>\n        </div>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { format } from \"date-fns\";\n\nexport default {\n  props: {\n    isOpen: Boolean,\n    rowData: {\n      type: Object,\n      default: () => ({}),\n    },\n    isEditMode: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      formData: { ...this.rowData },\n    };\n  },\n  watch: {\n    rowData: {\n      handler(newVal) {\n        this.formData = { ...newVal };\n      },\n      immediate: true,\n    },\n  },\n  created() {\n    if (this.isEditMode) {\n      const date = new Date(this.rowData.date);\n      this.formData.date = format(date, \"yyyy-MM-dd\");\n    } else {\n      this.formData.date = new Date().toISOString().split(\"T\")[0];\n    }\n  },\n  methods: {\n    async saveChanges() {\n      try {\n        const username = localStorage.getItem(\"user\");\n        if (!username) {\n          return;\n        }\n\n        this.formData.username = JSON.parse(username).userName;\n\n        if (this.isEditMode) {\n          const response = await axios.put(\n            `${import.meta.env.API_URL}/user/updateTable/${this.rowData.id}`,\n            this.formData\n          );\n          if (response.data.message === \"success\") {\n            window.alert(\"Successfully updated row\");\n            this.$emit(\"close\");\n          } else {\n            window.alert(\"Failed to update row\");\n          }\n        } else {\n          const response = await axios.post(\n            `${import.meta.env.API_URL}/user/insertTable`,\n            this.formData\n          );\n          if (response.data.message === \"success\") {\n            window.alert(\"Successfully added new row\");\n            this.formData = {};\n            this.$emit(\"close\");\n          } else {\n            window.alert(\"Failed to add new row\");\n          }\n        }\n      } catch (error) {\n        window.alert(\"Error saving changes:\", error.message);\n      }\n    },\n    close() {\n      this.$emit(\"close\");\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return format(date, \"yyyy-MM-dd\");\n    },\n  },\n};\n</script>\n\n<style scoped>\n.modal-backdrop {\n  min-width: 750px;\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 2;\n}\n.modal {\n  background: #ffffff;\n  box-shadow: 2px 2px 20px 1px;\n  display: grid;\n  grid-template-columns: auto;\n  justify-content: center;\n  max-width: 750px;\n  width: 90%;\n  margin: 0 auto;\n  z-index: 3;\n  border-radius: 10px;\n  padding: 20px;\n}\n\n.modal-content {\n  position: relative;\n  padding: 20px;\n}\n\n.button-close {\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: none;\n  font-size: 20px;\n  padding: 0;\n  cursor: pointer;\n  font-weight: bold;\n  color: #4caf50;\n  background: transparent;\n}\n.modal-fade-enter,\n.modal-fade-leave-to {\n  opacity: 0;\n}\n\n.modal-fade-enter-active,\n.modal-fade-leave-active {\n  transition: opacity 0.5s ease;\n}\n\n.input-grid {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-gap: 10px;\n}\n\n.input-row {\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 10px;\n}\n.input-grid input {\n  flex: 1;\n  margin-right: 10px;\n  padding: 8px;\n  border: 1px solid #cfcfcf;\n  border-radius: 5px;\n}\ninput[type=\"date\"]:valid {\n  color: grey;\n}\n.radio-button {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n}\n.radio-button label {\n  margin-bottom: 2px;\n  font-size: 12px;\n}\n.button {\n  grid-column: span 4;\n  justify-self: center;\n  padding: 8px 16px;\n  border-radius: 8px;\n  border: none;\n  background-color: #4caf50;\n  color: white;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 14px;\n  width: 80px;\n  cursor: pointer;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-top: 20px;\n}\n.button:hover {\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n</style>\n"],"mappings":"AAoJA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,MAAK,QAAS,UAAU;AAEjC,eAAe;EACbC,KAAK,EAAE;IACLC,MAAM,EAAEC,OAAO;IACfC,OAAO,EAAE;MACPC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,MAAO,CAAC,CAAC;IACpB,CAAC;IACDC,UAAU,EAAE;MACVH,IAAI,EAAEF,OAAO;MACbI,OAAO,EAAE;IACX;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE;QAAE,GAAG,IAAI,CAACN;MAAQ;IAC9B,CAAC;EACH,CAAC;EACDO,KAAK,EAAE;IACLP,OAAO,EAAE;MACPQ,OAAOA,CAACC,MAAM,EAAE;QACd,IAAI,CAACH,QAAO,GAAI;UAAE,GAAGG;QAAO,CAAC;MAC/B,CAAC;MACDC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACP,UAAU,EAAE;MACnB,MAAMQ,IAAG,GAAI,IAAIC,IAAI,CAAC,IAAI,CAACb,OAAO,CAACY,IAAI,CAAC;MACxC,IAAI,CAACN,QAAQ,CAACM,IAAG,GAAIhB,MAAM,CAACgB,IAAI,EAAE,YAAY,CAAC;IACjD,OAAO;MACL,IAAI,CAACN,QAAQ,CAACM,IAAG,GAAI,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC7D;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAMC,QAAO,GAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;QAC7C,IAAI,CAACF,QAAQ,EAAE;UACb;QACF;QAEA,IAAI,CAACZ,QAAQ,CAACY,QAAO,GAAIG,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC,CAACK,QAAQ;QAEtD,IAAI,IAAI,CAACnB,UAAU,EAAE;UACnB,MAAMoB,QAAO,GAAI,MAAM7B,KAAK,CAAC8B,GAAG,CAC7B,GAAEC,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,OAAQ,qBAAoB,IAAI,CAAC7B,OAAO,CAAC8B,EAAG,EAAC,EAChE,IAAI,CAACxB,QACP,CAAC;UACD,IAAIkB,QAAQ,CAACnB,IAAI,CAAC0B,OAAM,KAAM,SAAS,EAAE;YACvCC,MAAM,CAACC,KAAK,CAAC,0BAA0B,CAAC;YACxC,IAAI,CAACC,KAAK,CAAC,OAAO,CAAC;UACrB,OAAO;YACLF,MAAM,CAACC,KAAK,CAAC,sBAAsB,CAAC;UACtC;QACF,OAAO;UACL,MAAMT,QAAO,GAAI,MAAM7B,KAAK,CAACwC,IAAI,CAC9B,GAAET,MAAM,CAACC,IAAI,CAACC,GAAG,CAACC,OAAQ,mBAAkB,EAC7C,IAAI,CAACvB,QACP,CAAC;UACD,IAAIkB,QAAQ,CAACnB,IAAI,CAAC0B,OAAM,KAAM,SAAS,EAAE;YACvCC,MAAM,CAACC,KAAK,CAAC,4BAA4B,CAAC;YAC1C,IAAI,CAAC3B,QAAO,GAAI,CAAC,CAAC;YAClB,IAAI,CAAC4B,KAAK,CAAC,OAAO,CAAC;UACrB,OAAO;YACLF,MAAM,CAACC,KAAK,CAAC,uBAAuB,CAAC;UACvC;QACF;MACF,EAAE,OAAOG,KAAK,EAAE;QACdJ,MAAM,CAACC,KAAK,CAAC,uBAAuB,EAAEG,KAAK,CAACL,OAAO,CAAC;MACtD;IACF,CAAC;IACDM,KAAKA,CAAA,EAAG;MACN,IAAI,CAACH,KAAK,CAAC,OAAO,CAAC;IACrB,CAAC;IACDI,UAAUA,CAACC,UAAU,EAAE;MACrB,MAAM3B,IAAG,GAAI,IAAIC,IAAI,CAAC0B,UAAU,CAAC;MACjC,OAAO3C,MAAM,CAACgB,IAAI,EAAE,YAAY,CAAC;IACnC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}