{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport EditModal from \"./EditModal.vue\";\nexport default {\n  components: {\n    EditModal\n  },\n  data() {\n    return {\n      inputs: [],\n      apiLoading: false,\n      modalShow: false,\n      isEditMode: false,\n      modalTitle: \"\",\n      selectedRow: {},\n      newInput: {\n        date: \"\",\n        owner: \"\",\n        department: \"\",\n        complain: \"\",\n        barcode: \"\",\n        type: \"\",\n        model: \"\",\n        serviceTag: \"\",\n        storage: \"\",\n        ram: \"\",\n        cpu: \"\",\n        mac: \"\",\n        os: \"\",\n        pcName: \"\",\n        powerSupply: \"\",\n        user: \"\",\n        operation: \"\",\n        description: \"\",\n        demand: \"\"\n      }\n    };\n  },\n  created() {\n    this.fetchTable();\n  },\n  computed: {\n    filteredInputs() {\n      return this.inputs.filter(input => !input.deletedAt);\n    }\n  },\n  methods: {\n    async fetchTable() {\n      try {\n        const response = await axios.get(`${process.env.NODE_ENV === \"production\" ? \"127.0.0.1:9000\" : \"127.0.0.1:9000\"}/user/getTable`);\n        this.inputs = response.data.sort((a, b) => a.id - b.id);\n      } catch (error) {\n        console.error(\"Error fetching table data:\", error);\n      }\n    },\n    openModal(input) {\n      this.selectedRow = input ? {\n        ...input\n      } : {};\n      this.isEditMode = !!input;\n      this.modalShow = true;\n    },\n    async updateTable(input) {\n      try {\n        const username = localStorage.getItem(\"user\");\n        console.log(\"Username:\", username);\n        const currentDate = new Date().toISOString();\n        input.updatedAt = currentDate;\n        input.updatedBy = JSON.parse(username).userName;\n        const requestBody = {\n          ...input,\n          username: JSON.parse(username).userName\n        };\n        await axios.put(`${import.meta.env.API_URL}/user/updateTable/${input.id}`, requestBody);\n        console.log(\"Successfully updated input:\", input);\n      } catch (error) {\n        console.error(\"Error updating input:\", error);\n      }\n    },\n    async addInput() {\n      this.openModal(null);\n      await this.fetchTable();\n    },\n    closeModal() {\n      this.modalShow = false;\n    },\n    async deleteInput(input) {\n      try {\n        const username = localStorage.getItem(\"user\");\n        await axios.delete(`${import.meta.env.API_URL}/user/deleteTable/${input.id}`, {\n          data: {\n            username: JSON.parse(username).userName\n          }\n        });\n        this.inputs = this.inputs.filter(item => item.id !== input.id);\n        window.alert(\"Row deleted\");\n      } catch (error) {\n        console.error(\"Error deleting input:\", error);\n      }\n    },\n    logout() {\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n      location.reload();\n    },\n    formatDate(date) {\n      const dateObj = new Date(date);\n      return dateObj.toLocaleDateString(\"en-US\", {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\"\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","EditModal","components","data","inputs","apiLoading","modalShow","isEditMode","modalTitle","selectedRow","newInput","date","owner","department","complain","barcode","type","model","serviceTag","storage","ram","cpu","mac","os","pcName","powerSupply","user","operation","description","demand","created","fetchTable","computed","filteredInputs","filter","input","deletedAt","methods","response","get","process","env","NODE_ENV","sort","a","b","id","error","console","openModal","updateTable","username","localStorage","getItem","log","currentDate","Date","toISOString","updatedAt","updatedBy","JSON","parse","userName","requestBody","put","import","meta","API_URL","addInput","closeModal","deleteInput","delete","item","window","alert","logout","removeItem","$router","push","location","reload","formatDate","dateObj","toLocaleDateString","day","month","year"],"sources":["C:\\Users\\dulguun.sa\\Downloads\\TASKS\\TANA_PROJECTS\\frontend\\src\\components\\TableComponent.vue"],"sourcesContent":["<template>\n  <link\n    href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"\n    rel=\"stylesheet\"\n  />\n  <div class=\"main-container\">\n    <div class=\"button-container\">\n      <button @click=\"addInput\" class=\"add-button\">Add</button>\n      <button @click=\"logout\" class=\"logout-button\">Logout</button>\n    </div>\n    <div class=\"table-container\">\n      <table class=\"custom-table\">\n        <thead>\n          <tr>\n            <th>№</th>\n            <th>Огноо</th>\n            <th>Эзэмшигч</th>\n            <th>Хэлтэс / Нэгж</th>\n            <th>Гомдол</th>\n            <th>Баркод</th>\n            <th>Tөрөл</th>\n            <th>Модел</th>\n            <th>Service Tag</th>\n            <th>Storage</th>\n            <th>RAM</th>\n            <th>CPU</th>\n            <th>MAC</th>\n            <th>OS</th>\n            <th>PC Name</th>\n            <th>Power Supply</th>\n            <th>User</th>\n            <th>Operation</th>\n            <th>Comment</th>\n            <th>Шаардах / Акт</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr v-for=\"input in filteredInputs\" :key=\"input.id\">\n            <td>{{ input.id }}</td>\n            <td>{{ formatDate(input.date) }}</td>\n            <td>{{ input.owner }}</td>\n            <td>{{ input.department }}</td>\n            <td>{{ input.complain }}</td>\n            <td>{{ input.barcode }}</td>\n            <td>{{ input.type }}</td>\n            <td>{{ input.model }}</td>\n            <td>{{ input.serviceTag }}</td>\n            <td>{{ input.storage }}</td>\n            <td>{{ input.ram }}</td>\n            <td>{{ input.cpu }}</td>\n            <td>{{ input.mac }}</td>\n            <td>{{ input.os }}</td>\n            <td>{{ input.pcName }}</td>\n            <td>{{ input.powerSupply }}</td>\n            <td>{{ input.user }}</td>\n            <td>{{ input.operation }}</td>\n            <td>{{ input.description }}</td>\n            <td>{{ input.demand }}</td>\n            <td class=\"action-buttons\">\n              <button @click=\"openModal(input)\">\n                <i class=\"material-icons\">edit</i>\n              </button>\n              <button @click=\"deleteInput(input)\">\n                <i class=\"material-icons\">delete</i>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"modal fade\" :class=\"{ show: modalShow }\" role=\"dialog\">\n      <edit-modal\n        v-if=\"modalShow\"\n        :isOpen=\"modalShow\"\n        :rowData=\"selectedRow\"\n        :isEditMode=\"isEditMode\"\n        @close=\"modalShow = false\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport EditModal from \"./EditModal.vue\";\n\nexport default {\n  components: {\n    EditModal,\n  },\n  data() {\n    return {\n      inputs: [],\n      apiLoading: false,\n      modalShow: false,\n      isEditMode: false,\n      modalTitle: \"\",\n      selectedRow: {},\n      newInput: {\n        date: \"\",\n        owner: \"\",\n        department: \"\",\n        complain: \"\",\n        barcode: \"\",\n        type: \"\",\n        model: \"\",\n        serviceTag: \"\",\n        storage: \"\",\n        ram: \"\",\n        cpu: \"\",\n        mac: \"\",\n        os: \"\",\n        pcName: \"\",\n        powerSupply: \"\",\n        user: \"\",\n        operation: \"\",\n        description: \"\",\n        demand: \"\",\n      },\n    };\n  },\n  created() {\n    this.fetchTable();\n  },\n  computed: {\n    filteredInputs() {\n      return this.inputs.filter((input) => !input.deletedAt);\n    },\n  },\n  methods: {\n    async fetchTable() {\n      try {\n        const response = await axios.get(\n          `${\n            process.env.NODE_ENV === \"production\"\n              ? \"127.0.0.1:9000\"\n              : \"127.0.0.1:9000\"\n          }/user/getTable`\n        );\n        this.inputs = response.data.sort((a, b) => a.id - b.id);\n      } catch (error) {\n        console.error(\"Error fetching table data:\", error);\n      }\n    },\n    openModal(input) {\n      this.selectedRow = input ? { ...input } : {};\n      this.isEditMode = !!input;\n      this.modalShow = true;\n    },\n    async updateTable(input) {\n      try {\n        const username = localStorage.getItem(\"user\");\n        console.log(\"Username:\", username);\n        const currentDate = new Date().toISOString();\n        input.updatedAt = currentDate;\n        input.updatedBy = JSON.parse(username).userName;\n        const requestBody = {\n          ...input,\n          username: JSON.parse(username).userName,\n        };\n        await axios.put(\n          `${import.meta.env.API_URL}/user/updateTable/${input.id}`,\n          requestBody\n        );\n        console.log(\"Successfully updated input:\", input);\n      } catch (error) {\n        console.error(\"Error updating input:\", error);\n      }\n    },\n\n    async addInput() {\n      this.openModal(null);\n      await this.fetchTable();\n    },\n\n    closeModal() {\n      this.modalShow = false;\n    },\n    async deleteInput(input) {\n      try {\n        const username = localStorage.getItem(\"user\");\n        await axios.delete(\n          `${import.meta.env.API_URL}/user/deleteTable/${input.id}`,\n          { data: { username: JSON.parse(username).userName } }\n        );\n        this.inputs = this.inputs.filter((item) => item.id !== input.id);\n        window.alert(\"Row deleted\");\n      } catch (error) {\n        console.error(\"Error deleting input:\", error);\n      }\n    },\n\n    logout() {\n      localStorage.removeItem(\"user\");\n      this.$router.push(\"/login\");\n      location.reload();\n    },\n    formatDate(date) {\n      const dateObj = new Date(date);\n      return dateObj.toLocaleDateString(\"en-US\", {\n        day: \"2-digit\",\n        month: \"2-digit\",\n        year: \"numeric\",\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n.table-container {\n  max-height: 500px;\n  overflow: auto;\n}\n.add-button,\n.logout-button {\n  background-color: #4caf50;\n  border: none;\n  color: white;\n  padding: 8px 16px;\n  text-align: center;\n  text-decoration: none;\n  display: inline-block;\n  font-size: 14px;\n  width: 80px;\n  margin: 4px 2px;\n  cursor: pointer;\n  border-radius: 8px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  margin-top: 20px;\n}\n.add-button:hover,\n.logout-button:hover {\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n.custom-table {\n  border-collapse: collapse;\n  width: 100%;\n  font-size: 14px;\n  overflow-x: auto;\n}\n.custom-table th,\n.custom-table td {\n  border: none;\n  padding: 15px 4px 15px 4px;\n  text-align: center;\n}\n\n.custom-table th {\n  background-color: #f2f2f2;\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\n.action-buttons {\n  display: flex;\n  flex-direction: row;\n}\n.action-buttons button {\n  background-color: transparent;\n  color: #c7c4c4;\n  border: none;\n  cursor: pointer;\n  font-size: 16px;\n  margin-right: 5px;\n}\n.input-section {\n  display: grid;\n  grid-template-columns: auto auto auto auto auto;\n  gap: 10px;\n  padding: 10px;\n  justify-content: space-evenly;\n}\n\n.input-section input,\n.input-section select,\n.input-section button {\n  padding: 8px;\n  border-radius: 8px;\n  border: 1px solid #ccc;\n  text-align: center;\n  width: 250px;\n}\n.input-section button {\n  border: none;\n  background-color: #4caf50;\n  color: white;\n  width: 265px;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}